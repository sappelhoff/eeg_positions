[metadata]
name = eeg_positions
version = attr: eeg_positions.__version__
url = https://github.com/sappelhoff/eeg_positions
author = Stefan Appelhoff
maintainer = Stefan Appelhoff
maintainer_email = stefan.appelhoff@mailbox.org
description = Compute and plot standard EEG electrode positions.
long_description = file: README.md
long_description_content_type = text/markdown
keywords = EEG electrodes coordinates positions neuroscience
license = BSD-3-Clause
license_files = LICENSE
platforms = any
classifiers =
  Topic :: Scientific/Engineering
  Intended Audience :: Science/Research
  Development Status :: 5 - Production/Stable
  License :: OSI Approved :: BSD License
  Operating System :: POSIX :: Linux
  Operating System :: Unix
  Operating System :: MacOS
  Operating System :: Microsoft :: Windows
  Programming Language :: Python :: 3
  Programming Language :: Python :: 3.7
  Programming Language :: Python :: 3.8
  Programming Language :: Python :: 3.9
  Programming Language :: Python :: 3.10
project_urls =
  Bug Reports = https://github.com/sappelhoff/eeg_positions/issues
  Source = https://github.com/sappelhoff/eeg_positions

[options]
python_requires = >= 3.7
install_requires =
  numpy >= 1.15.4
  matplotlib >= 0.8.0
  pandas >= 1.0.0

packages = find:
include_package_data = True
zip_safe = True

[options.extras_require]
dev =
  mne >= 0.22.0
  pytest
  pytest-sugar
  pytest-cov
  flake8 >= 3.9.2
  flake8-docstrings
  flake8-isort >= 4.0.0
  flake8-black
  check-manifest
  black
  isort
  ipython
  sphinx
  numpydoc
  sphinx-copybutton
  sphinx-gallery
  sphinxcontrib-bibtex
  sphinx_github_role

[options.packages.find]
exclude =
  tests

[bdist_wheel]
universal = true

[flake8]
docstring-convention = numpy
# Recommend matching the black line length (default 88),
# rather than using the flake8 default of 79:
max-line-length = 88
extend-ignore =
  # See https://github.com/PyCQA/pycodestyle/issues/373
  E203

[isort]
profile=black

[coverage:run]
omit =
  # Do not include test script in coverage report
  *tests*
  setup.py

[coverage:report]
# Regexes for lines to exclude from consideration
exclude_lines =
  # Have to re-enable the standard pragma
  pragma: no cover

  # Don't complain if non-runnable code isn't run:
  if 0:
  if __name__ == .__main__.:
